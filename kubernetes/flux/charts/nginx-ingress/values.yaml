nginx-ingress:
  controller:
    replicaCount: 2
    ## Name of the ingress class to route through this controller
    ##
    # ingressClass: nginx-external

    service:
      omitClusterIP: true
      enableHttp: true
      enableHttps: true
      targetPorts:
        http: http
        https: https
      #
      # annotations:
      #   service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: "60"
      #   service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "443"
      #   service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "ssl"

    config:
      # https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/#ssl-ciphers
      # ssl-ciphers: "ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA"
      # https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/#ssl-protocols
      # ssl-protocols: "TLSv1 TLSv1.1 TLSv1.2"
      proxy-body-size: 10m

    publishService:
      enabled: true

    metrics:
      enabled: true
      service:
        omitClusterIP: true
      serviceMonitor:
        enabled: true
        additionalLabels:
          release: monitoring-prometheus-operator

    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: component
              operator: In
              values:
              - controller
          topologyKey: "kubernetes.io/hostname"

  defaultBackend:
    replicaCount: 2

    service:
      omitClusterIP: true

    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: component
              operator: In
              values:
              - default-backend
          topologyKey: "kubernetes.io/hostname"
